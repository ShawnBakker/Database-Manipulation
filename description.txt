Introduction

1. In this assignment you will be implementing

    a) a binary search tree (BST) using C++ classes and composition, and

    b) a simple database that stores student information using inheritance

2. This time, the declaration for the required classes are provided. These must not be changed, and your implementation must follow them.

3. First, implement the BST (declared in bst.h) and use the unittest_bst() function to test it. DO NOT CHANGE THIS CODE FOR YOUR SUBMISSION, as it will be used to test your code against the answers (with different seed values).

4. Implement the DB and use the unittest_db() function to test it. DO NOT CHANGE THIS CODE FOR YOUR SUBMISSION, as it will be used to test your code against the answers (with different input files).

    a) The student ID should be the base class's key member.

    b) The student ID should be automatically assigned such that the ID/key should be n if the student is the nth student to join the school. If the student later leaves (i.e., deleted from the BST), the ID does NOT get reassigned to another student. Thus, the student ID of the last student to join the school should reflect the TOTAL number of students that have joined this school since its reception (regardless of whether some have left).
